{"version":3,"sources":["logo.svg","actions/types.js","actions/auth.js","components/navbar.js","hocs/layout.js","containers/home.js","containers/login.js","containers/signup.js","containers/activate.js","containers/resetpassword.js","containers/resetpasswordconfirm.js","reducers/auth.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","LOGOUT","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","connect","state","isAuthenticated","auth","logout","useState","redirect","setRedirect","logout_user","className","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","onClick","checkAuthenticated","body","JSON","stringify","token","post","code","children","useEffect","Home","login","email","password","formData","setFormData","onChange","e","target","name","value","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Image","src","Form","size","onSubmit","preventDefault","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","required","Button","Message","signup","first_name","last_name","re_password","accountCreated","setAccountCreated","verify","uid","match","verified","setVerified","marginTop","params","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.220d4c9c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\r\nexport const LOGOUT = 'LOGOUT';","import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    \r\n    LOGOUT\r\n} from './types';\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        }; \r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n    \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }; \r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const signup = (first_name, last_name, email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ first_name, last_name, email, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n};","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/auth';\r\n\r\nconst Navbar = ({ logout, isAuthenticated }) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const logout_user = () => {\r\n        logout();\r\n        setRedirect(true);\r\n    };\r\n\r\n    const guestLinks = () => (\r\n        <Fragment>\r\n            <li className='nav-item'>\r\n                <Link className='nav-link' to='/login'>Login</Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <Link className='nav-link' to='/signup'>Sign Up</Link>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    const authLinks = () => (\r\n        <li className='nav-item'>\r\n            <a className='nav-link' href='#!' onClick={logout_user}>Logout</a>\r\n        </li>\r\n    );\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n                <Link className='navbar-brand' to='/'>Auth System</Link>\r\n                <button \r\n                    className='navbar-toggler' \r\n                    type='button' \r\n                    data-toggle='collapse' \r\n                    data-target='#navbarNav' \r\n                    aria-controls='navbarNav' \r\n                    aria-expanded='false' \r\n                    aria-label='Toggle navigation'\r\n                >\r\n                    <span className='navbar-toggler-icon'></span>\r\n                </button>\r\n                <div className='collapse navbar-collapse' id='navbarNav'>\r\n                    <ul className='navbar-nav'>\r\n                        <li className='nav-item active'>\r\n                            <Link className='nav-link' to='/'>Home <span className='sr-only'>(current)</span></Link>\r\n                        </li>\r\n                        {isAuthenticated ? authLinks() : guestLinks()}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            {redirect ? <Redirect to='/' /> : <Fragment></Fragment>}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);","import React, { useEffect } from 'react';\r\nimport Navbar from '../components/navbar';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated, load_user } from '../actions/auth';\r\n\r\nconst Layout = ({ checkAuthenticated, load_user, children }) => {\r\n    useEffect(() => {\r\n        checkAuthenticated();\r\n        load_user();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(Layout);","import React from 'react';\r\n\r\n\r\nconst Home= ()=>(\r\n    <div>\r\n        home\r\n    </div>\r\n);\r\n export default Home\r\n \r\n","import React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\r\nimport {login} from '../actions/auth'\r\n\r\n\r\nconst Login = ({login, isAuthenticated}) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n\r\n\r\n  });\r\n  const { email, password } = formData;\r\n  const onChange= e=> setFormData({...formData, [e.target.name]: e.target.value})\r\n  const onSubmit=e=>{\r\n    e.preventDefault();\r\n    login(email,password);\r\n  };\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/' />\r\n}\r\n  return(\r\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n    <Grid.Column style={{ maxWidth: 550 }}>\r\n      <Header as='h2' color='teal' textAlign='center'>\r\n        <Image src='/logo.png' /> Log-in to your account\r\n      </Header>\r\n      <Form size='large' onSubmit={e=>onSubmit(e)}>\r\n        <Segment stacked>\r\n          <Form.Input\r\n            fluid\r\n            icon='user'\r\n            iconPosition='left'\r\n            type=\"email\"\r\n            placeholder='E-mail address'\r\n            name=\"email\"\r\n            value= {email}\r\n            onChange={e=> onChange(e)}\r\n            required\r\n          />\r\n          <Form.Input\r\n            fluid\r\n            icon='lock'\r\n\r\n            iconPosition='left'\r\n            placeholder='Password'\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            onChange={e=> onChange(e)}\r\n            required\r\n          />\r\n\r\n          <Button color='teal' fluid size='large' type='submit'>\r\n            Login\r\n          </Button>\r\n\r\n        </Segment>\r\n\r\n      </Form>\r\n      <Message>\r\n        New to us? <Link to='/signup'>Sign Up</Link><br />\r\n        <Link to='/reset_password'>Forget Password?</Link>\r\n      </Message>\r\n    </Grid.Column>\r\n  </Grid>\r\n\r\n\r\n  )\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React, { useState } from 'react';\r\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signup } from '../actions/auth';\r\n// import axios from 'axios';\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        first_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n\r\n    const { first_name, last_name, email, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password === re_password) {\r\n            signup(first_name, last_name, email, password, re_password);\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n\r\n    \r\n    if (isAuthenticated) {\r\n        return <Redirect to='/' />\r\n    }\r\n    if (accountCreated) {\r\n        return <Redirect to='/login' />\r\n    }\r\n\r\n    return(\r\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n        <Grid.Column style={{ maxWidth: 550 }}>\r\n          <Header as='h2' color='teal' textAlign='center'>\r\n            <Image src='/logo.png' /> Create your account\r\n          </Header>\r\n          <Form size='large' onSubmit={e=>onSubmit(e)}>\r\n            <Segment stacked>\r\n            <Form.Input\r\n                fluid\r\n                icon='user'\r\n                iconPosition='left'\r\n                type=\"text\"\r\n                placeholder='First Name'\r\n                name=\"first_name\"\r\n                value= {first_name}\r\n                onChange={e=> onChange(e)}\r\n                required\r\n              />  \r\n            <Form.Input\r\n                fluid\r\n                icon='user'\r\n                iconPosition='left'\r\n                type=\"text\"\r\n                placeholder='Last Name'\r\n                name=\"last_name\"\r\n                value= {last_name}\r\n                onChange={e=> onChange(e)}\r\n                required\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon='user'\r\n                iconPosition='left'\r\n                type=\"email\"\r\n                placeholder='E-mail address'\r\n                name=\"email\"\r\n                value= {email}\r\n                onChange={e=> onChange(e)}\r\n                required\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon='lock'\r\n    \r\n                iconPosition='left'\r\n                placeholder='Password'\r\n                type='password'\r\n                name='password'\r\n                value={password}\r\n                onChange={e=> onChange(e)}\r\n                required\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon='lock'\r\n    \r\n                iconPosition='left'\r\n                placeholder='Confirm Password*'\r\n                type='password'\r\n                name='re_password'\r\n                value={re_password}\r\n                onChange={e=> onChange(e)}\r\n                required\r\n              />\r\n    \r\n              <Button color='teal' fluid size='large' type='submit'>\r\n                Login\r\n              </Button>\r\n    \r\n            </Segment>\r\n    \r\n          </Form>\r\n          <Message>\r\n            Already have an account? <Link to='/login'>Sign In</Link><br />\r\n            \r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    \r\n    \r\n      )\r\n    };\r\n    const mapStateToProps = state => ({\r\n        isAuthenticated: state.auth.isAuthenticated\r\n    });\r\n    \r\n    export default connect(mapStateToProps, { signup })(Signup);\r\n \r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { verify } from '../actions/auth';\r\n\r\nconst Activate = ({ verify, match }) => {\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = e => {\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n    if (verified) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div \r\n                className='d-flex flex-column justify-content-center align-items-center'\r\n                style={{ marginTop: '200px' }}\r\n            >\r\n                <h1>Verify your Account:</h1>\r\n                <button\r\n                    onClick={verify_account}\r\n                    style={{ marginTop: '50px' }}\r\n                    type='button'\r\n                    className='btn btn-primary'\r\n                >\r\n                    Verify\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);","\r\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\r\nimport React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password } from '../actions/auth';\r\n\r\nconst Resetpassword = ({ reset_password }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        email: ''\r\n    });\r\n\r\n    const { email } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        reset_password(email);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent) {\r\n        return <Redirect to='/' />\r\n    }\r\n  return(\r\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n    <Grid.Column style={{ maxWidth: 550 }}>\r\n      <Header as='h2' color='teal' textAlign='center'>\r\n        <Image src='/logo.png' /> Request Password Reset:\r\n      </Header>\r\n      <Form size='large' onSubmit={e=>onSubmit(e)}>\r\n        <Segment stacked>\r\n          <Form.Input\r\n            fluid\r\n            icon='user'\r\n            iconPosition='left'\r\n            type=\"email\"\r\n            placeholder='E-mail address'\r\n            name=\"email\"\r\n            value= {email}\r\n            onChange={e=> onChange(e)}\r\n            required\r\n          />\r\n         \r\n\r\n          <Button color='teal' fluid size='large' type='submit'>\r\n            Submit\r\n          </Button>\r\n\r\n        </Segment>\r\n\r\n      </Form>\r\n      {/* <Message>\r\n        New to us? <Link to='/signup'>Sign Up</Link><br />\r\n        <Link to='/reset_password'>Forget Password?</Link>\r\n      </Message> */}\r\n    </Grid.Column>\r\n  </Grid>\r\n\r\n\r\n  )\r\n};\r\n\r\n\r\n\r\nexport default connect(null, { reset_password })(Resetpassword);","\r\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\r\nimport React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../actions/auth';\r\n\r\nconst Resetpasswordconfirm = ({ match, reset_password_confirm }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    });\r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent) {\r\n        return <Redirect to='/' />\r\n    }\r\n  return(\r\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n    <Grid.Column style={{ maxWidth: 550 }}>\r\n      <Header as='h2' color='teal' textAlign='center'>\r\n        <Image src='/logo.png' /> Request Password Reset:\r\n      </Header>\r\n      <Form size='large' onSubmit={e=>onSubmit(e)}>\r\n        <Segment stacked>\r\n        <Form.Input\r\n            fluid\r\n            icon='lock'\r\n\r\n            iconPosition='left'\r\n            placeholder='New Password'\r\n            type='password'\r\n            name='new_password'\r\n            value={new_password}\r\n            onChange={e=> onChange(e)}\r\n            required\r\n          />\r\n          <Form.Input\r\n            fluid\r\n            icon='lock'\r\n\r\n            iconPosition='left'\r\n            placeholder='COnfirm New Password'\r\n            type='password'\r\n            name='re_new_password'\r\n            value={re_new_password}\r\n            onChange={e=> onChange(e)}\r\n            required\r\n          />\r\n         \r\n\r\n          <Button color='teal' fluid size='large' type='submit'>\r\n            Login\r\n          </Button>\r\n\r\n        </Segment>\r\n\r\n      </Form>\r\n      {/* <Message>\r\n        New to us? <Link to='/signup'>Sign Up</Link><br />\r\n        <Link to='/reset_password'>Forget Password?</Link>\r\n      </Message> */}\r\n    </Grid.Column>\r\n  </Grid>\r\n\r\n\r\n  )\r\n};\r\n\r\n\r\n\r\nexport default connect(null, { reset_password_confirm })(Resetpasswordconfirm);","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    LOGOUT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n        \r\n            localStorage.setItem('access', payload.access);\r\n            localStorage.setItem('refresh', payload.refresh);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        \r\n        case LOGIN_FAIL:\r\n        case SIGNUP_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import logo from './logo.svg';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\n\nimport './App.css';\nimport Layout from './hocs/layout'\n\nimport Home from './containers/home'\nimport Login from './containers/login'\nimport Signup from './containers/signup'\nimport Activate from './containers/activate'\nimport Resetpassword from './containers/resetpassword'\nimport Resetpasswordconfirm from './containers/resetpasswordconfirm'\n\nimport {Provider} from 'react-redux'\nimport store from './store'\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n      <Router>\n\n        <Layout>\n          <Switch>\n\n\n\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route path=\"/reset_password\">\n              <Resetpassword />\n\n            </Route>\n            <Route path=\"/password/reset/confirm/:uid/:token\">\n              <Resetpasswordconfirm />\n            </Route>\n            <Route path=\"/activate/:uid/:token\">\n              <Activate />\n            </Route>\n\n\n          </Switch>\n        </Layout>\n      </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}